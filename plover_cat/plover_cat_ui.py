# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'plover_cat\plover_cat.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PloverCAT(object):
    def setupUi(self, PloverCAT):
        PloverCAT.setObjectName("PloverCAT")
        PloverCAT.resize(891, 705)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PloverCAT.sizePolicy().hasHeightForWidth())
        PloverCAT.setSizePolicy(sizePolicy)
        PloverCAT.setMinimumSize(QtCore.QSize(32, 0))
        font = QtGui.QFont()
        font.setPointSize(8)
        PloverCAT.setFont(font)
        self.centralwidget = QtWidgets.QWidget(PloverCAT)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.textEdit = PloverCATEditor(self.centralwidget)
        self.textEdit.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.textEdit.setFont(font)
        self.textEdit.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.textEdit.setAcceptDrops(False)
        self.textEdit.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textEdit.setDocumentTitle("")
        self.textEdit.setReadOnly(True)
        self.textEdit.setCursorWidth(5)
        self.textEdit.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout.addWidget(self.textEdit)
        self.verticalLayout_12.addLayout(self.horizontalLayout)
        PloverCAT.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(PloverCAT)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 891, 19))
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setToolTipsVisible(True)
        self.menuFile.setObjectName("menuFile")
        self.menuExport_as = QtWidgets.QMenu(self.menuFile)
        self.menuExport_as.setToolTipsVisible(True)
        self.menuExport_as.setObjectName("menuExport_as")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setToolTipsVisible(True)
        self.menuEdit.setObjectName("menuEdit")
        self.menuAudio = QtWidgets.QMenu(self.menubar)
        self.menuAudio.setToolTipsVisible(True)
        self.menuAudio.setObjectName("menuAudio")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setToolTipsVisible(True)
        self.menuView.setObjectName("menuView")
        self.menuDocks = QtWidgets.QMenu(self.menuView)
        self.menuDocks.setObjectName("menuDocks")
        self.menuDictionary = QtWidgets.QMenu(self.menubar)
        self.menuDictionary.setToolTipsVisible(True)
        self.menuDictionary.setObjectName("menuDictionary")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setToolTipsVisible(True)
        self.menuHelp.setObjectName("menuHelp")
        self.menuSteno_Actions = QtWidgets.QMenu(self.menubar)
        self.menuSteno_Actions.setObjectName("menuSteno_Actions")
        self.menuStyling = QtWidgets.QMenu(self.menubar)
        self.menuStyling.setObjectName("menuStyling")
        PloverCAT.setMenuBar(self.menubar)
        self.statusBar = QtWidgets.QStatusBar(PloverCAT)
        self.statusBar.setObjectName("statusBar")
        PloverCAT.setStatusBar(self.statusBar)
        self.toolbar_file = QtWidgets.QToolBar(PloverCAT)
        self.toolbar_file.setToolTip("")
        self.toolbar_file.setObjectName("toolbar_file")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbar_file)
        self.dockPaper = QtWidgets.QDockWidget(PloverCAT)
        self.dockPaper.setMinimumSize(QtCore.QSize(95, 142))
        self.dockPaper.setWhatsThis("")
        self.dockPaper.setAccessibleDescription("")
        self.dockPaper.setObjectName("dockPaper")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.strokeList = QtWidgets.QPlainTextEdit(self.dockWidgetContents)
        self.strokeList.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Courier New")
        font.setPointSize(8)
        self.strokeList.setFont(font)
        self.strokeList.setFocusPolicy(QtCore.Qt.NoFocus)
        self.strokeList.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.strokeList.setReadOnly(True)
        self.strokeList.setPlainText("")
        self.strokeList.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.strokeList.setObjectName("strokeList")
        self.verticalLayout_4.addWidget(self.strokeList)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.strokeLocate = QtWidgets.QPushButton(self.dockWidgetContents)
        self.strokeLocate.setFocusPolicy(QtCore.Qt.NoFocus)
        self.strokeLocate.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.strokeLocate.setObjectName("strokeLocate")
        self.horizontalLayout_9.addWidget(self.strokeLocate)
        self.verticalLayout_4.addLayout(self.horizontalLayout_9)
        self.dockPaper.setWidget(self.dockWidgetContents)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockPaper)
        self.dockSuggest = QtWidgets.QDockWidget(PloverCAT)
        self.dockSuggest.setMinimumSize(QtCore.QSize(97, 134))
        self.dockSuggest.setObjectName("dockSuggest")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.suggest_sort = QtWidgets.QRadioButton(self.dockWidgetContents_3)
        self.suggest_sort.setFocusPolicy(QtCore.Qt.NoFocus)
        self.suggest_sort.setObjectName("suggest_sort")
        self.verticalLayout_2.addWidget(self.suggest_sort)
        self.suggestTable = QtWidgets.QTableWidget(self.dockWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suggestTable.sizePolicy().hasHeightForWidth())
        self.suggestTable.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(8)
        self.suggestTable.setFont(font)
        self.suggestTable.setFocusPolicy(QtCore.Qt.NoFocus)
        self.suggestTable.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.suggestTable.setRowCount(0)
        self.suggestTable.setObjectName("suggestTable")
        self.suggestTable.setColumnCount(0)
        self.suggestTable.horizontalHeader().setVisible(False)
        self.suggestTable.horizontalHeader().setSortIndicatorShown(False)
        self.suggestTable.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.suggestTable)
        self.dockSuggest.setWidget(self.dockWidgetContents_3)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockSuggest)
        self.dockAudio = QtWidgets.QDockWidget(PloverCAT)
        self.dockAudio.setMinimumSize(QtCore.QSize(0, 0))
        self.dockAudio.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.dockAudio.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockAudio.setObjectName("dockAudio")
        self.dockWidgetContents_4 = QtWidgets.QWidget()
        self.dockWidgetContents_4.setObjectName("dockWidgetContents_4")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.audio_label = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.audio_label.setObjectName("audio_label")
        self.verticalLayout_6.addWidget(self.audio_label)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.playRate = QtWidgets.QDoubleSpinBox(self.dockWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.playRate.sizePolicy().hasHeightForWidth())
        self.playRate.setSizePolicy(sizePolicy)
        self.playRate.setMinimumSize(QtCore.QSize(0, 0))
        self.playRate.setFocusPolicy(QtCore.Qt.NoFocus)
        self.playRate.setMinimum(0.05)
        self.playRate.setMaximum(2.0)
        self.playRate.setSingleStep(0.05)
        self.playRate.setProperty("value", 1.0)
        self.playRate.setObjectName("playRate")
        self.horizontalLayout_7.addWidget(self.playRate)
        self.audioDelay = QtWidgets.QSpinBox(self.dockWidgetContents_4)
        self.audioDelay.setFocusPolicy(QtCore.Qt.NoFocus)
        self.audioDelay.setMaximum(10000)
        self.audioDelay.setSingleStep(100)
        self.audioDelay.setObjectName("audioDelay")
        self.horizontalLayout_7.addWidget(self.audioDelay)
        self.audio_curr_pos = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.audio_curr_pos.setObjectName("audio_curr_pos")
        self.horizontalLayout_7.addWidget(self.audio_curr_pos)
        self.audio_seeker = QtWidgets.QSlider(self.dockWidgetContents_4)
        self.audio_seeker.setFocusPolicy(QtCore.Qt.NoFocus)
        self.audio_seeker.setOrientation(QtCore.Qt.Horizontal)
        self.audio_seeker.setObjectName("audio_seeker")
        self.horizontalLayout_7.addWidget(self.audio_seeker)
        self.audio_duration = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.audio_duration.setObjectName("audio_duration")
        self.horizontalLayout_7.addWidget(self.audio_duration)
        self.verticalLayout_6.addLayout(self.horizontalLayout_7)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem)
        self.dockAudio.setWidget(self.dockWidgetContents_4)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockAudio)
        self.dockProp = QtWidgets.QDockWidget(PloverCAT)
        self.dockProp.setMinimumSize(QtCore.QSize(87, 289))
        self.dockProp.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.dockProp.setFloating(False)
        self.dockProp.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockProp.setObjectName("dockProp")
        self.dockWidgetContents_5 = QtWidgets.QWidget()
        self.dockWidgetContents_5.setObjectName("dockWidgetContents_5")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.dockWidgetContents_5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.toolBox = QtWidgets.QToolBox(self.dockWidgetContents_5)
        self.toolBox.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.toolBox.setToolTip("")
        self.toolBox.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.toolBox.setFrameShadow(QtWidgets.QFrame.Plain)
        self.toolBox.setObjectName("toolBox")
        self.styling_pane = QtWidgets.QWidget()
        self.styling_pane.setGeometry(QtCore.QRect(0, 0, 340, 472))
        self.styling_pane.setObjectName("styling_pane")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.styling_pane)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.style_file_path = QtWidgets.QLabel(self.styling_pane)
        self.style_file_path.setObjectName("style_file_path")
        self.verticalLayout_11.addWidget(self.style_file_path)
        self.label_3 = QtWidgets.QLabel(self.styling_pane)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_11.addWidget(self.label_3)
        self.style_selector = QtWidgets.QComboBox(self.styling_pane)
        self.style_selector.setFocusPolicy(QtCore.Qt.NoFocus)
        self.style_selector.setObjectName("style_selector")
        self.verticalLayout_11.addWidget(self.style_selector)
        self.groupBox_4 = QtWidgets.QGroupBox(self.styling_pane)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.blockFont = QtWidgets.QFontComboBox(self.groupBox_4)
        self.blockFont.setFocusPolicy(QtCore.Qt.ClickFocus)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        font.setPointSize(12)
        self.blockFont.setCurrentFont(font)
        self.blockFont.setObjectName("blockFont")
        self.horizontalLayout_12.addWidget(self.blockFont)
        self.blockFontSize = QtWidgets.QSpinBox(self.groupBox_4)
        self.blockFontSize.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockFontSize.setProperty("value", 12)
        self.blockFontSize.setObjectName("blockFontSize")
        self.horizontalLayout_12.addWidget(self.blockFontSize)
        self.verticalLayout_20.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.blockFontBold = QtWidgets.QPushButton(self.groupBox_4)
        self.blockFontBold.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockFontBold.setText("")
        icon = QtGui.QIcon()
        icon.addFile(":/edit-bold.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockFontBold.setIcon(icon)
        self.blockFontBold.setCheckable(True)
        self.blockFontBold.setObjectName("blockFontBold")
        self.horizontalLayout_15.addWidget(self.blockFontBold)
        self.blockFontItalic = QtWidgets.QPushButton(self.groupBox_4)
        self.blockFontItalic.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockFontItalic.setText("")
        icon1 = QtGui.QIcon()
        icon1.addFile(":/edit-italic.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockFontItalic.setIcon(icon1)
        self.blockFontItalic.setCheckable(True)
        self.blockFontItalic.setObjectName("blockFontItalic")
        self.horizontalLayout_15.addWidget(self.blockFontItalic)
        self.blockFontUnderline = QtWidgets.QPushButton(self.groupBox_4)
        self.blockFontUnderline.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockFontUnderline.setText("")
        icon2 = QtGui.QIcon()
        icon2.addFile(":/edit-underline.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockFontUnderline.setIcon(icon2)
        self.blockFontUnderline.setCheckable(True)
        self.blockFontUnderline.setObjectName("blockFontUnderline")
        self.horizontalLayout_15.addWidget(self.blockFontUnderline)
        self.blockLeftAlign = QtWidgets.QPushButton(self.groupBox_4)
        self.blockLeftAlign.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockLeftAlign.setText("")
        icon3 = QtGui.QIcon()
        icon3.addFile(":/edit-alignment.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockLeftAlign.setIcon(icon3)
        self.blockLeftAlign.setCheckable(True)
        self.blockLeftAlign.setChecked(True)
        self.blockLeftAlign.setObjectName("blockLeftAlign")
        self.blockAlignment = QtWidgets.QButtonGroup(PloverCAT)
        self.blockAlignment.setObjectName("blockAlignment")
        self.blockAlignment.addButton(self.blockLeftAlign)
        self.horizontalLayout_15.addWidget(self.blockLeftAlign)
        self.blockCenterAlign = QtWidgets.QPushButton(self.groupBox_4)
        self.blockCenterAlign.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockCenterAlign.setText("")
        icon4 = QtGui.QIcon()
        icon4.addFile(":/edit-alignment-center.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockCenterAlign.setIcon(icon4)
        self.blockCenterAlign.setCheckable(True)
        self.blockCenterAlign.setObjectName("blockCenterAlign")
        self.blockAlignment.addButton(self.blockCenterAlign)
        self.horizontalLayout_15.addWidget(self.blockCenterAlign)
        self.blockRightAlign = QtWidgets.QPushButton(self.groupBox_4)
        self.blockRightAlign.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockRightAlign.setText("")
        icon5 = QtGui.QIcon()
        icon5.addFile(":/edit-alignment-right.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockRightAlign.setIcon(icon5)
        self.blockRightAlign.setCheckable(True)
        self.blockRightAlign.setObjectName("blockRightAlign")
        self.blockAlignment.addButton(self.blockRightAlign)
        self.horizontalLayout_15.addWidget(self.blockRightAlign)
        self.blockJustify = QtWidgets.QPushButton(self.groupBox_4)
        self.blockJustify.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockJustify.setText("")
        icon6 = QtGui.QIcon()
        icon6.addFile(":/edit-alignment-justify-distribute.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockJustify.setIcon(icon6)
        self.blockJustify.setCheckable(True)
        self.blockJustify.setObjectName("blockJustify")
        self.blockAlignment.addButton(self.blockJustify)
        self.horizontalLayout_15.addWidget(self.blockJustify)
        self.blockLineSpace = QtWidgets.QSpinBox(self.groupBox_4)
        self.blockLineSpace.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockLineSpace.setMaximum(1000)
        self.blockLineSpace.setProperty("value", 100)
        self.blockLineSpace.setObjectName("blockLineSpace")
        self.horizontalLayout_15.addWidget(self.blockLineSpace)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem1)
        self.verticalLayout_20.addLayout(self.horizontalLayout_15)
        self.formLayout_4 = QtWidgets.QFormLayout()
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_30 = QtWidgets.QLabel(self.groupBox_4)
        self.label_30.setObjectName("label_30")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_30)
        self.fontspaceInInch = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.fontspaceInInch.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.fontspaceInInch.setReadOnly(True)
        self.fontspaceInInch.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fontspaceInInch.setObjectName("fontspaceInInch")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.fontspaceInInch)
        self.label_28 = QtWidgets.QLabel(self.groupBox_4)
        self.label_28.setObjectName("label_28")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_28)
        self.blockTextIndent = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.blockTextIndent.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockTextIndent.setMinimum(0.0)
        self.blockTextIndent.setSingleStep(0.05)
        self.blockTextIndent.setObjectName("blockTextIndent")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.blockTextIndent)
        self.label_29 = QtWidgets.QLabel(self.groupBox_4)
        self.label_29.setObjectName("label_29")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_29)
        self.blockTabStop = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.blockTabStop.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockTabStop.setSingleStep(0.05)
        self.blockTabStop.setObjectName("blockTabStop")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.blockTabStop)
        self.label_24 = QtWidgets.QLabel(self.groupBox_4)
        self.label_24.setObjectName("label_24")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_24)
        self.blockLeftMargin = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.blockLeftMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockLeftMargin.setMinimum(0.0)
        self.blockLeftMargin.setSingleStep(0.05)
        self.blockLeftMargin.setObjectName("blockLeftMargin")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.blockLeftMargin)
        self.label_25 = QtWidgets.QLabel(self.groupBox_4)
        self.label_25.setObjectName("label_25")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_25)
        self.blockRightMargin = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.blockRightMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockRightMargin.setMinimum(0.0)
        self.blockRightMargin.setSingleStep(0.05)
        self.blockRightMargin.setObjectName("blockRightMargin")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.blockRightMargin)
        self.label_26 = QtWidgets.QLabel(self.groupBox_4)
        self.label_26.setObjectName("label_26")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_26)
        self.blockTopMargin = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.blockTopMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockTopMargin.setMinimum(0.0)
        self.blockTopMargin.setSingleStep(0.05)
        self.blockTopMargin.setObjectName("blockTopMargin")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.blockTopMargin)
        self.label_27 = QtWidgets.QLabel(self.groupBox_4)
        self.label_27.setObjectName("label_27")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_27)
        self.blockBottomMargin = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.blockBottomMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockBottomMargin.setReadOnly(False)
        self.blockBottomMargin.setSingleStep(0.05)
        self.blockBottomMargin.setObjectName("blockBottomMargin")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.blockBottomMargin)
        self.label_31 = QtWidgets.QLabel(self.groupBox_4)
        self.label_31.setObjectName("label_31")
        self.formLayout_4.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_31)
        self.blockParentStyle = QtWidgets.QComboBox(self.groupBox_4)
        self.blockParentStyle.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockParentStyle.setObjectName("blockParentStyle")
        self.formLayout_4.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.blockParentStyle)
        self.label_32 = QtWidgets.QLabel(self.groupBox_4)
        self.label_32.setObjectName("label_32")
        self.formLayout_4.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_32)
        self.blockNextStyle = QtWidgets.QComboBox(self.groupBox_4)
        self.blockNextStyle.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockNextStyle.setObjectName("blockNextStyle")
        self.formLayout_4.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.blockNextStyle)
        self.label_33 = QtWidgets.QLabel(self.groupBox_4)
        self.label_33.setObjectName("label_33")
        self.formLayout_4.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_33)
        self.blockHeadingLevel = QtWidgets.QComboBox(self.groupBox_4)
        self.blockHeadingLevel.setEnabled(False)
        self.blockHeadingLevel.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockHeadingLevel.setObjectName("blockHeadingLevel")
        self.formLayout_4.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.blockHeadingLevel)
        self.editCurrentStyle = QtWidgets.QPushButton(self.groupBox_4)
        self.editCurrentStyle.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editCurrentStyle.setObjectName("editCurrentStyle")
        self.formLayout_4.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.editCurrentStyle)
        self.verticalLayout_20.addLayout(self.formLayout_4)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_20.addItem(spacerItem2)
        self.verticalLayout_11.addWidget(self.groupBox_4)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_11.addItem(spacerItem3)
        icon7 = QtGui.QIcon()
        icon7.addFile(":/edit-style.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.styling_pane, icon7, "")
        self.page_format_pane = QtWidgets.QWidget()
        self.page_format_pane.setGeometry(QtCore.QRect(0, -194, 326, 415))
        self.page_format_pane.setObjectName("page_format_pane")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.page_format_pane)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_8 = QtWidgets.QLabel(self.page_format_pane)
        self.label_8.setObjectName("label_8")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.page_width = QtWidgets.QDoubleSpinBox(self.page_format_pane)
        self.page_width.setProperty("value", 8.5)
        self.page_width.setObjectName("page_width")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.page_width)
        self.label_9 = QtWidgets.QLabel(self.page_format_pane)
        self.label_9.setObjectName("label_9")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_9)
        self.page_height = QtWidgets.QDoubleSpinBox(self.page_format_pane)
        self.page_height.setProperty("value", 11.0)
        self.page_height.setObjectName("page_height")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.page_height)
        self.label_10 = QtWidgets.QLabel(self.page_format_pane)
        self.label_10.setObjectName("label_10")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.page_left_margin = QtWidgets.QDoubleSpinBox(self.page_format_pane)
        self.page_left_margin.setDecimals(4)
        self.page_left_margin.setProperty("value", 1.75)
        self.page_left_margin.setObjectName("page_left_margin")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.page_left_margin)
        self.label_11 = QtWidgets.QLabel(self.page_format_pane)
        self.label_11.setObjectName("label_11")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.page_top_margin = QtWidgets.QDoubleSpinBox(self.page_format_pane)
        self.page_top_margin.setDecimals(4)
        self.page_top_margin.setProperty("value", 0.7874)
        self.page_top_margin.setObjectName("page_top_margin")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.page_top_margin)
        self.label_12 = QtWidgets.QLabel(self.page_format_pane)
        self.label_12.setObjectName("label_12")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_12)
        self.page_right_margin = QtWidgets.QDoubleSpinBox(self.page_format_pane)
        self.page_right_margin.setDecimals(4)
        self.page_right_margin.setProperty("value", 0.3799)
        self.page_right_margin.setObjectName("page_right_margin")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.page_right_margin)
        self.label_13 = QtWidgets.QLabel(self.page_format_pane)
        self.label_13.setObjectName("label_13")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_13)
        self.page_bottom_margin = QtWidgets.QDoubleSpinBox(self.page_format_pane)
        self.page_bottom_margin.setDecimals(4)
        self.page_bottom_margin.setProperty("value", 0.7874)
        self.page_bottom_margin.setObjectName("page_bottom_margin")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.page_bottom_margin)
        self.label_15 = QtWidgets.QLabel(self.page_format_pane)
        self.label_15.setObjectName("label_15")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_15)
        self.page_max_char = QtWidgets.QSpinBox(self.page_format_pane)
        self.page_max_char.setObjectName("page_max_char")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.page_max_char)
        self.label_14 = QtWidgets.QLabel(self.page_format_pane)
        self.label_14.setObjectName("label_14")
        self.formLayout_3.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_14)
        self.page_max_lines = QtWidgets.QSpinBox(self.page_format_pane)
        self.page_max_lines.setObjectName("page_max_lines")
        self.formLayout_3.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.page_max_lines)
        self.label_35 = QtWidgets.QLabel(self.page_format_pane)
        self.label_35.setObjectName("label_35")
        self.formLayout_3.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_35)
        self.enable_line_num = QtWidgets.QCheckBox(self.page_format_pane)
        self.enable_line_num.setText("")
        self.enable_line_num.setObjectName("enable_line_num")
        self.formLayout_3.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.enable_line_num)
        self.label_34 = QtWidgets.QLabel(self.page_format_pane)
        self.label_34.setObjectName("label_34")
        self.formLayout_3.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_34)
        self.line_num_freq = QtWidgets.QSpinBox(self.page_format_pane)
        self.line_num_freq.setMinimum(1)
        self.line_num_freq.setObjectName("line_num_freq")
        self.formLayout_3.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.line_num_freq)
        self.label_36 = QtWidgets.QLabel(self.page_format_pane)
        self.label_36.setObjectName("label_36")
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.LabelRole, self.label_36)
        self.enable_timestamp = QtWidgets.QCheckBox(self.page_format_pane)
        self.enable_timestamp.setText("")
        self.enable_timestamp.setObjectName("enable_timestamp")
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.enable_timestamp)
        self.verticalLayout_10.addLayout(self.formLayout_3)
        self.label_37 = QtWidgets.QLabel(self.page_format_pane)
        self.label_37.setObjectName("label_37")
        self.verticalLayout_10.addWidget(self.label_37)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.header_left = QtWidgets.QLineEdit(self.page_format_pane)
        self.header_left.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.header_left.setObjectName("header_left")
        self.horizontalLayout_5.addWidget(self.header_left)
        self.header_center = QtWidgets.QLineEdit(self.page_format_pane)
        self.header_center.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.header_center.setObjectName("header_center")
        self.horizontalLayout_5.addWidget(self.header_center)
        self.header_right = QtWidgets.QLineEdit(self.page_format_pane)
        self.header_right.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.header_right.setObjectName("header_right")
        self.horizontalLayout_5.addWidget(self.header_right)
        self.verticalLayout_10.addLayout(self.horizontalLayout_5)
        self.label_38 = QtWidgets.QLabel(self.page_format_pane)
        self.label_38.setObjectName("label_38")
        self.verticalLayout_10.addWidget(self.label_38)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.footer_left = QtWidgets.QLineEdit(self.page_format_pane)
        self.footer_left.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.footer_left.setObjectName("footer_left")
        self.horizontalLayout_17.addWidget(self.footer_left)
        self.footer_center = QtWidgets.QLineEdit(self.page_format_pane)
        self.footer_center.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.footer_center.setObjectName("footer_center")
        self.horizontalLayout_17.addWidget(self.footer_center)
        self.footer_right = QtWidgets.QLineEdit(self.page_format_pane)
        self.footer_right.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.footer_right.setObjectName("footer_right")
        self.horizontalLayout_17.addWidget(self.footer_right)
        self.verticalLayout_10.addLayout(self.horizontalLayout_17)
        self.edit_page_layout = QtWidgets.QPushButton(self.page_format_pane)
        self.edit_page_layout.setFocusPolicy(QtCore.Qt.NoFocus)
        self.edit_page_layout.setObjectName("edit_page_layout")
        self.verticalLayout_10.addWidget(self.edit_page_layout)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_10.addItem(spacerItem4)
        icon8 = QtGui.QIcon()
        icon8.addFile(":/document-resize-actual.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.page_format_pane, icon8, "")
        self.find_replace_pane = QtWidgets.QWidget()
        self.find_replace_pane.setGeometry(QtCore.QRect(0, 0, 326, 217))
        self.find_replace_pane.setObjectName("find_replace_pane")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.find_replace_pane)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.groupBox_2 = QtWidgets.QGroupBox(self.find_replace_pane)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.search_text = QtWidgets.QRadioButton(self.groupBox_2)
        self.search_text.setChecked(True)
        self.search_text.setObjectName("search_text")
        self.verticalLayout_14.addWidget(self.search_text)
        self.search_steno = QtWidgets.QRadioButton(self.groupBox_2)
        self.search_steno.setObjectName("search_steno")
        self.verticalLayout_14.addWidget(self.search_steno)
        self.search_untrans = QtWidgets.QRadioButton(self.groupBox_2)
        self.search_untrans.setObjectName("search_untrans")
        self.verticalLayout_14.addWidget(self.search_untrans)
        self.verticalLayout_9.addWidget(self.groupBox_2)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.search_term = QtWidgets.QLineEdit(self.find_replace_pane)
        self.search_term.setObjectName("search_term")
        self.horizontalLayout_2.addWidget(self.search_term)
        self.search_forward = QtWidgets.QPushButton(self.find_replace_pane)
        self.search_forward.setObjectName("search_forward")
        self.horizontalLayout_2.addWidget(self.search_forward)
        self.search_backward = QtWidgets.QPushButton(self.find_replace_pane)
        self.search_backward.setObjectName("search_backward")
        self.horizontalLayout_2.addWidget(self.search_backward)
        self.verticalLayout_9.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.replace_term = QtWidgets.QLineEdit(self.find_replace_pane)
        self.replace_term.setObjectName("replace_term")
        self.horizontalLayout_3.addWidget(self.replace_term)
        self.replace_selected = QtWidgets.QPushButton(self.find_replace_pane)
        self.replace_selected.setObjectName("replace_selected")
        self.horizontalLayout_3.addWidget(self.replace_selected)
        self.replace_all = QtWidgets.QPushButton(self.find_replace_pane)
        self.replace_all.setObjectName("replace_all")
        self.horizontalLayout_3.addWidget(self.replace_all)
        self.verticalLayout_9.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.search_case = QtWidgets.QCheckBox(self.find_replace_pane)
        self.search_case.setObjectName("search_case")
        self.horizontalLayout_4.addWidget(self.search_case)
        self.search_whole = QtWidgets.QCheckBox(self.find_replace_pane)
        self.search_whole.setObjectName("search_whole")
        self.horizontalLayout_4.addWidget(self.search_whole)
        self.search_wrap = QtWidgets.QCheckBox(self.find_replace_pane)
        self.search_wrap.setObjectName("search_wrap")
        self.horizontalLayout_4.addWidget(self.search_wrap)
        self.verticalLayout_9.addLayout(self.horizontalLayout_4)
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.verticalLayout_9.addLayout(self.verticalLayout_13)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_9.addItem(spacerItem5)
        self.verticalLayout_7.addLayout(self.verticalLayout_9)
        icon9 = QtGui.QIcon()
        icon9.addFile(":/magnifier.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.find_replace_pane, icon9, "")
        self.paragraph_pane = QtWidgets.QWidget()
        self.paragraph_pane.setGeometry(QtCore.QRect(0, 0, 326, 215))
        self.paragraph_pane.setObjectName("paragraph_pane")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.paragraph_pane)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.editorCheck = QtWidgets.QCheckBox(self.paragraph_pane)
        self.editorCheck.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorCheck.setChecked(True)
        self.editorCheck.setObjectName("editorCheck")
        self.verticalLayout_5.addWidget(self.editorCheck)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_2 = QtWidgets.QLabel(self.paragraph_pane)
        self.label_2.setObjectName("label_2")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.editorParagraphLabel = QtWidgets.QLabel(self.paragraph_pane)
        self.editorParagraphLabel.setObjectName("editorParagraphLabel")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.editorParagraphLabel)
        self.label = QtWidgets.QLabel(self.paragraph_pane)
        self.label.setObjectName("label")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label)
        self.editorCreationTime = QtWidgets.QDateTimeEdit(self.paragraph_pane)
        self.editorCreationTime.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorCreationTime.setObjectName("editorCreationTime")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.editorCreationTime)
        self.label_6 = QtWidgets.QLabel(self.paragraph_pane)
        self.label_6.setObjectName("label_6")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.editorEditTime = QtWidgets.QDateTimeEdit(self.paragraph_pane)
        self.editorEditTime.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorEditTime.setReadOnly(True)
        self.editorEditTime.setObjectName("editorEditTime")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.editorEditTime)
        self.label_4 = QtWidgets.QLabel(self.paragraph_pane)
        self.label_4.setObjectName("label_4")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.editorAudioStart = QtWidgets.QTimeEdit(self.paragraph_pane)
        self.editorAudioStart.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorAudioStart.setCurrentSection(QtWidgets.QDateTimeEdit.HourSection)
        self.editorAudioStart.setObjectName("editorAudioStart")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.editorAudioStart)
        self.label_5 = QtWidgets.QLabel(self.paragraph_pane)
        self.label_5.setObjectName("label_5")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.editorAudioEnd = QtWidgets.QTimeEdit(self.paragraph_pane)
        self.editorAudioEnd.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorAudioEnd.setObjectName("editorAudioEnd")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.editorAudioEnd)
        self.label_7 = QtWidgets.QLabel(self.paragraph_pane)
        self.label_7.setObjectName("label_7")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.editorNotes = QtWidgets.QLineEdit(self.paragraph_pane)
        self.editorNotes.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorNotes.setObjectName("editorNotes")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.editorNotes)
        self.verticalLayout_5.addLayout(self.formLayout_2)
        self.submitEdited = QtWidgets.QPushButton(self.paragraph_pane)
        self.submitEdited.setEnabled(False)
        self.submitEdited.setFocusPolicy(QtCore.Qt.NoFocus)
        self.submitEdited.setObjectName("submitEdited")
        self.verticalLayout_5.addWidget(self.submitEdited)
        icon10 = QtGui.QIcon()
        icon10.addFile(":/edit-pilcrow.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.paragraph_pane, icon10, "")
        self.audio_recording_pane = QtWidgets.QWidget()
        self.audio_recording_pane.setGeometry(QtCore.QRect(0, 0, 326, 279))
        self.audio_recording_pane.setObjectName("audio_recording_pane")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.audio_recording_pane)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout()
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label_16 = QtWidgets.QLabel(self.audio_recording_pane)
        self.label_16.setObjectName("label_16")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_16)
        self.label_17 = QtWidgets.QLabel(self.audio_recording_pane)
        self.label_17.setObjectName("label_17")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_17)
        self.label_18 = QtWidgets.QLabel(self.audio_recording_pane)
        self.label_18.setObjectName("label_18")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_18)
        self.label_19 = QtWidgets.QLabel(self.audio_recording_pane)
        self.label_19.setObjectName("label_19")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_19)
        self.audio_device = QtWidgets.QComboBox(self.audio_recording_pane)
        self.audio_device.setObjectName("audio_device")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.audio_device)
        self.audio_codec = QtWidgets.QComboBox(self.audio_recording_pane)
        self.audio_codec.setObjectName("audio_codec")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.audio_codec)
        self.audio_container = QtWidgets.QComboBox(self.audio_recording_pane)
        self.audio_container.setObjectName("audio_container")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.audio_container)
        self.audio_sample_rate = QtWidgets.QComboBox(self.audio_recording_pane)
        self.audio_sample_rate.setInsertPolicy(QtWidgets.QComboBox.InsertAtTop)
        self.audio_sample_rate.setObjectName("audio_sample_rate")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.audio_sample_rate)
        self.audio_channels = QtWidgets.QComboBox(self.audio_recording_pane)
        self.audio_channels.setObjectName("audio_channels")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.audio_channels)
        self.label_20 = QtWidgets.QLabel(self.audio_recording_pane)
        self.label_20.setObjectName("label_20")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_20)
        self.verticalLayout_15.addLayout(self.formLayout)
        self.groupBox_3 = QtWidgets.QGroupBox(self.audio_recording_pane)
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.constant_quality = QtWidgets.QRadioButton(self.groupBox_3)
        self.constant_quality.setChecked(True)
        self.constant_quality.setObjectName("constant_quality")
        self.verticalLayout_16.addWidget(self.constant_quality)
        self.quality_slider = QtWidgets.QSlider(self.groupBox_3)
        self.quality_slider.setMaximum(4)
        self.quality_slider.setProperty("value", 2)
        self.quality_slider.setOrientation(QtCore.Qt.Horizontal)
        self.quality_slider.setObjectName("quality_slider")
        self.verticalLayout_16.addWidget(self.quality_slider)
        self.constant_bitrate = QtWidgets.QRadioButton(self.groupBox_3)
        self.constant_bitrate.setObjectName("constant_bitrate")
        self.verticalLayout_16.addWidget(self.constant_bitrate)
        self.audio_bitrate = QtWidgets.QComboBox(self.groupBox_3)
        self.audio_bitrate.setObjectName("audio_bitrate")
        self.verticalLayout_16.addWidget(self.audio_bitrate)
        self.verticalLayout_15.addWidget(self.groupBox_3)
        self.verticalLayout_3.addLayout(self.verticalLayout_15)
        icon11 = QtGui.QIcon()
        icon11.addFile(":/microphone.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.audio_recording_pane, icon11, "")
        self.spellcheck_pane = QtWidgets.QWidget()
        self.spellcheck_pane.setGeometry(QtCore.QRect(0, 0, 326, 164))
        self.spellcheck_pane.setObjectName("spellcheck_pane")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.spellcheck_pane)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout()
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.dict_selection = QtWidgets.QComboBox(self.spellcheck_pane)
        self.dict_selection.setObjectName("dict_selection")
        self.dict_selection.addItem("")
        self.verticalLayout_18.addWidget(self.dict_selection)
        self.spell_search = QtWidgets.QPushButton(self.spellcheck_pane)
        self.spell_search.setObjectName("spell_search")
        self.verticalLayout_18.addWidget(self.spell_search)
        self.spell_skip = QtWidgets.QPushButton(self.spellcheck_pane)
        self.spell_skip.setObjectName("spell_skip")
        self.verticalLayout_18.addWidget(self.spell_skip)
        self.spell_ignore_all = QtWidgets.QPushButton(self.spellcheck_pane)
        self.spell_ignore_all.setObjectName("spell_ignore_all")
        self.verticalLayout_18.addWidget(self.spell_ignore_all)
        self.spell_change = QtWidgets.QPushButton(self.spellcheck_pane)
        self.spell_change.setObjectName("spell_change")
        self.verticalLayout_18.addWidget(self.spell_change)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_18.addItem(spacerItem6)
        self.horizontalLayout_10.addLayout(self.verticalLayout_18)
        self.verticalLayout_19 = QtWidgets.QVBoxLayout()
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_21 = QtWidgets.QLabel(self.spellcheck_pane)
        self.label_21.setObjectName("label_21")
        self.horizontalLayout_11.addWidget(self.label_21)
        self.spellcheck_result = QtWidgets.QLineEdit(self.spellcheck_pane)
        self.spellcheck_result.setObjectName("spellcheck_result")
        self.horizontalLayout_11.addWidget(self.spellcheck_result)
        self.verticalLayout_19.addLayout(self.horizontalLayout_11)
        self.spellcheck_suggestions = QtWidgets.QListWidget(self.spellcheck_pane)
        self.spellcheck_suggestions.setFocusPolicy(QtCore.Qt.NoFocus)
        self.spellcheck_suggestions.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.spellcheck_suggestions.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.spellcheck_suggestions.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectColumns)
        self.spellcheck_suggestions.setObjectName("spellcheck_suggestions")
        self.verticalLayout_19.addWidget(self.spellcheck_suggestions)
        self.horizontalLayout_10.addLayout(self.verticalLayout_19)
        self.verticalLayout_8.addLayout(self.horizontalLayout_10)
        icon12 = QtGui.QIcon()
        icon12.addFile(":/spell-check.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.spellcheck_pane, icon12, "")
        self.verticalLayout.addWidget(self.toolBox)
        self.dockProp.setWidget(self.dockWidgetContents_5)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockProp)
        self.toolbar_steno = QtWidgets.QToolBar(PloverCAT)
        self.toolbar_steno.setObjectName("toolbar_steno")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbar_steno)
        self.toolbar_audio = QtWidgets.QToolBar(PloverCAT)
        self.toolbar_audio.setObjectName("toolbar_audio")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbar_audio)
        self.dockHistoryStack = QtWidgets.QDockWidget(PloverCAT)
        self.dockHistoryStack.setMinimumSize(QtCore.QSize(97, 210))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.dockHistoryStack.setFont(font)
        self.dockHistoryStack.setObjectName("dockHistoryStack")
        self.dockWidgetContents_6 = QtWidgets.QWidget()
        self.dockWidgetContents_6.setObjectName("dockWidgetContents_6")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.dockWidgetContents_6)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout()
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.label_22 = QtWidgets.QLabel(self.dockWidgetContents_6)
        self.label_22.setObjectName("label_22")
        self.verticalLayout_17.addWidget(self.label_22)
        self.undoView = QtWidgets.QUndoView(self.dockWidgetContents_6)
        self.undoView.setFocusPolicy(QtCore.Qt.NoFocus)
        self.undoView.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.undoView.setObjectName("undoView")
        self.verticalLayout_17.addWidget(self.undoView)
        self.label_23 = QtWidgets.QLabel(self.dockWidgetContents_6)
        self.label_23.setObjectName("label_23")
        self.verticalLayout_17.addWidget(self.label_23)
        self.versions = QtWidgets.QComboBox(self.dockWidgetContents_6)
        self.versions.setObjectName("versions")
        self.verticalLayout_17.addWidget(self.versions)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.revert_version = QtWidgets.QPushButton(self.dockWidgetContents_6)
        self.revert_version.setObjectName("revert_version")
        self.horizontalLayout_13.addWidget(self.revert_version)
        self.verticalLayout_17.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_6.addLayout(self.verticalLayout_17)
        self.dockHistoryStack.setWidget(self.dockWidgetContents_6)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockHistoryStack)
        self.dockStenoData = QtWidgets.QDockWidget(PloverCAT)
        self.dockStenoData.setMinimumSize(QtCore.QSize(0, 0))
        self.dockStenoData.setObjectName("dockStenoData")
        self.dockWidgetContents_7 = QtWidgets.QWidget()
        self.dockWidgetContents_7.setObjectName("dockWidgetContents_7")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.dockWidgetContents_7)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.parSteno = QtWidgets.QListWidget(self.dockWidgetContents_7)
        self.parSteno.setFocusPolicy(QtCore.Qt.NoFocus)
        self.parSteno.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.parSteno.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.parSteno.setAlternatingRowColors(True)
        self.parSteno.setFlow(QtWidgets.QListView.LeftToRight)
        self.parSteno.setObjectName("parSteno")
        self.horizontalLayout_8.addWidget(self.parSteno)
        self.dockStenoData.setWidget(self.dockWidgetContents_7)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockStenoData)
        self.toolbar_edit = QtWidgets.QToolBar(PloverCAT)
        self.toolbar_edit.setObjectName("toolbar_edit")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbar_edit)
        self.actionOpen_Stroke_Log = QtWidgets.QAction(PloverCAT)
        self.actionOpen_Stroke_Log.setObjectName("actionOpen_Stroke_Log")
        self.actionOpen_Project = QtWidgets.QAction(PloverCAT)
        self.actionOpen_Project.setObjectName("actionOpen_Project")
        self.actionOpen = QtWidgets.QAction(PloverCAT)
        icon13 = QtGui.QIcon()
        icon13.addFile(":/folder-open-document-text.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon13)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_As = QtWidgets.QAction(PloverCAT)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionNew = QtWidgets.QAction(PloverCAT)
        icon14 = QtGui.QIcon()
        icon14.addFile(":/document.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon14)
        self.actionNew.setObjectName("actionNew")
        self.actionSave = QtWidgets.QAction(PloverCAT)
        icon15 = QtGui.QIcon()
        icon15.addFile(":/disk-black.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon15)
        self.actionSave.setObjectName("actionSave")
        self.actionQuit = QtWidgets.QAction(PloverCAT)
        self.actionQuit.setObjectName("actionQuit")
        self.actionClose = QtWidgets.QAction(PloverCAT)
        self.actionClose.setObjectName("actionClose")
        self.actionAdd_Custom_Dict = QtWidgets.QAction(PloverCAT)
        icon16 = QtGui.QIcon()
        icon16.addFile(":/plus-button.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdd_Custom_Dict.setIcon(icon16)
        self.actionAdd_Custom_Dict.setObjectName("actionAdd_Custom_Dict")
        self.actionOpen_Audio_File = QtWidgets.QAction(PloverCAT)
        self.actionOpen_Audio_File.setObjectName("actionOpen_Audio_File")
        self.actionStop = QtWidgets.QAction(PloverCAT)
        self.actionStop.setObjectName("actionStop")
        self.actionPlainText = QtWidgets.QAction(PloverCAT)
        self.actionPlainText.setObjectName("actionPlainText")
        self.actionASCII = QtWidgets.QAction(PloverCAT)
        self.actionASCII.setObjectName("actionASCII")
        self.actionSubRip = QtWidgets.QAction(PloverCAT)
        self.actionSubRip.setObjectName("actionSubRip")
        self.actionCut = QtWidgets.QAction(PloverCAT)
        icon17 = QtGui.QIcon()
        icon17.addFile(":/scissors-blue.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon17)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(PloverCAT)
        icon18 = QtGui.QIcon()
        icon18.addFile(":/clipboard--plus.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon18)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(PloverCAT)
        icon19 = QtGui.QIcon()
        icon19.addFile(":/clipboard-paste-document-text.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon19)
        self.actionPaste.setObjectName("actionPaste")
        self.actionZoom_In = QtWidgets.QAction(PloverCAT)
        icon20 = QtGui.QIcon()
        icon20.addFile(":/magnifier-zoom-in.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoom_In.setIcon(icon20)
        self.actionZoom_In.setObjectName("actionZoom_In")
        self.actionZoom_Out = QtWidgets.QAction(PloverCAT)
        icon21 = QtGui.QIcon()
        icon21.addFile(":/magnifier-zoom-out.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoom_Out.setIcon(icon21)
        self.actionZoom_Out.setObjectName("actionZoom_Out")
        self.actionUndo = QtWidgets.QAction(PloverCAT)
        icon22 = QtGui.QIcon()
        icon22.addFile(":/arrow-curve-180.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon22)
        self.actionUndo.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(PloverCAT)
        icon23 = QtGui.QIcon()
        icon23.addFile(":/arrow-curve.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon23)
        self.actionRedo.setObjectName("actionRedo")
        self.actionSelect_All = QtWidgets.QAction(PloverCAT)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionOpen_Audio = QtWidgets.QAction(PloverCAT)
        icon24 = QtGui.QIcon()
        icon24.addFile(":/folder-open-document-music.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Audio.setIcon(icon24)
        self.actionOpen_Audio.setObjectName("actionOpen_Audio")
        self.actionSkip_Back = QtWidgets.QAction(PloverCAT)
        icon25 = QtGui.QIcon()
        icon25.addFile(":/control-skip-180.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSkip_Back.setIcon(icon25)
        self.actionSkip_Back.setObjectName("actionSkip_Back")
        self.actionSkip_Forward = QtWidgets.QAction(PloverCAT)
        icon26 = QtGui.QIcon()
        icon26.addFile(":/control-skip.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSkip_Forward.setIcon(icon26)
        self.actionSkip_Forward.setObjectName("actionSkip_Forward")
        self.actionStop_Audio = QtWidgets.QAction(PloverCAT)
        icon27 = QtGui.QIcon()
        icon27.addFile(":/control-stop-square.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStop_Audio.setIcon(icon27)
        self.actionStop_Audio.setObjectName("actionStop_Audio")
        self.actionSlow_Down = QtWidgets.QAction(PloverCAT)
        self.actionSlow_Down.setObjectName("actionSlow_Down")
        self.actionSpeed_Up = QtWidgets.QAction(PloverCAT)
        self.actionSpeed_Up.setObjectName("actionSpeed_Up")
        self.actionPlay_Pause = QtWidgets.QAction(PloverCAT)
        icon28 = QtGui.QIcon()
        icon28.addFile(":/control-stop.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPlay_Pause.setIcon(icon28)
        self.actionPlay_Pause.setObjectName("actionPlay_Pause")
        self.actionMerge_Paragraphs = QtWidgets.QAction(PloverCAT)
        icon29 = QtGui.QIcon()
        icon29.addFile(":/arrow-join.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMerge_Paragraphs.setIcon(icon29)
        self.actionMerge_Paragraphs.setObjectName("actionMerge_Paragraphs")
        self.actionSplit_Paragraph = QtWidgets.QAction(PloverCAT)
        icon30 = QtGui.QIcon()
        icon30.addFile(":/arrow-split.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSplit_Paragraph.setIcon(icon30)
        self.actionSplit_Paragraph.setObjectName("actionSplit_Paragraph")
        self.actionWindowFont = QtWidgets.QAction(PloverCAT)
        icon31 = QtGui.QIcon()
        icon31.addFile(":/edit.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionWindowFont.setIcon(icon31)
        self.actionWindowFont.setObjectName("actionWindowFont")
        self.actionODT = QtWidgets.QAction(PloverCAT)
        self.actionODT.setObjectName("actionODT")
        self.actionNormal_Copy = QtWidgets.QAction(PloverCAT)
        icon32 = QtGui.QIcon()
        icon32.addFile(":/clipboard.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNormal_Copy.setIcon(icon32)
        self.actionNormal_Copy.setObjectName("actionNormal_Copy")
        self.actionFind_Replace_Pane = QtWidgets.QAction(PloverCAT)
        self.actionFind_Replace_Pane.setIcon(icon9)
        self.actionFind_Replace_Pane.setObjectName("actionFind_Replace_Pane")
        self.actionOpen_Transcript_Folder = QtWidgets.QAction(PloverCAT)
        self.actionOpen_Transcript_Folder.setEnabled(False)
        self.actionOpen_Transcript_Folder.setObjectName("actionOpen_Transcript_Folder")
        self.actionRecord_Pause = QtWidgets.QAction(PloverCAT)
        icon33 = QtGui.QIcon()
        icon33.addFile(":/control-record.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRecord_Pause.setIcon(icon33)
        self.actionRecord_Pause.setObjectName("actionRecord_Pause")
        self.actionPause_Recording = QtWidgets.QAction(PloverCAT)
        self.actionPause_Recording.setObjectName("actionPause_Recording")
        self.actionStop_Recording = QtWidgets.QAction(PloverCAT)
        self.actionStop_Recording.setEnabled(False)
        self.actionStop_Recording.setObjectName("actionStop_Recording")
        self.actionShow_Video = QtWidgets.QAction(PloverCAT)
        self.actionShow_Video.setObjectName("actionShow_Video")
        self.actionRemove_Transcript_Dict = QtWidgets.QAction(PloverCAT)
        icon34 = QtGui.QIcon()
        icon34.addFile(":/minus-button.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_Transcript_Dict.setIcon(icon34)
        self.actionRemove_Transcript_Dict.setObjectName("actionRemove_Transcript_Dict")
        self.actionImport_RTF = QtWidgets.QAction(PloverCAT)
        self.actionImport_RTF.setObjectName("actionImport_RTF")
        self.actionCursor_At_End = QtWidgets.QAction(PloverCAT)
        self.actionCursor_At_End.setCheckable(True)
        icon35 = QtGui.QIcon()
        icon35.addFile(":/lock.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCursor_At_End.setIcon(icon35)
        self.actionCursor_At_End.setObjectName("actionCursor_At_End")
        self.actionCapture_All_Output = QtWidgets.QAction(PloverCAT)
        self.actionCapture_All_Output.setCheckable(True)
        self.actionCapture_All_Output.setObjectName("actionCapture_All_Output")
        self.actionUser_Manual = QtWidgets.QAction(PloverCAT)
        icon36 = QtGui.QIcon()
        icon36.addFile(":/book-question.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUser_Manual.setIcon(icon36)
        self.actionUser_Manual.setObjectName("actionUser_Manual")
        self.actionAcknowledgements = QtWidgets.QAction(PloverCAT)
        self.actionAcknowledgements.setObjectName("actionAcknowledgements")
        self.actionPaper_Tape = QtWidgets.QAction(PloverCAT)
        self.actionPaper_Tape.setCheckable(True)
        self.actionPaper_Tape.setChecked(True)
        self.actionPaper_Tape.setObjectName("actionPaper_Tape")
        self.actionSuggestions = QtWidgets.QAction(PloverCAT)
        self.actionSuggestions.setCheckable(True)
        self.actionSuggestions.setChecked(True)
        self.actionSuggestions.setObjectName("actionSuggestions")
        self.actionHistory = QtWidgets.QAction(PloverCAT)
        self.actionHistory.setCheckable(True)
        self.actionHistory.setChecked(True)
        self.actionHistory.setObjectName("actionHistory")
        self.actionReveal_Steno = QtWidgets.QAction(PloverCAT)
        self.actionReveal_Steno.setCheckable(True)
        self.actionReveal_Steno.setChecked(True)
        self.actionReveal_Steno.setObjectName("actionReveal_Steno")
        self.actionAudio_Controls = QtWidgets.QAction(PloverCAT)
        self.actionAudio_Controls.setCheckable(True)
        self.actionAudio_Controls.setChecked(True)
        self.actionAudio_Controls.setObjectName("actionAudio_Controls")
        self.actionToolbox = QtWidgets.QAction(PloverCAT)
        self.actionToolbox.setCheckable(True)
        self.actionToolbox.setChecked(True)
        self.actionToolbox.setObjectName("actionToolbox")
        self.actionClear_Paragraph = QtWidgets.QAction(PloverCAT)
        self.actionClear_Paragraph.setObjectName("actionClear_Paragraph")
        self.actionRetroactive_Define = QtWidgets.QAction(PloverCAT)
        icon37 = QtGui.QIcon()
        icon37.addFile(":/card--plus.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRetroactive_Define.setIcon(icon37)
        self.actionRetroactive_Define.setObjectName("actionRetroactive_Define")
        self.actionChanglog = QtWidgets.QAction(PloverCAT)
        self.actionChanglog.setObjectName("actionChanglog")
        self.actionDefine_Last = QtWidgets.QAction(PloverCAT)
        icon38 = QtGui.QIcon()
        icon38.addFile(":/arrow-stop-180.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDefine_Last.setIcon(icon38)
        self.actionDefine_Last.setObjectName("actionDefine_Last")
        self.actionAbout = QtWidgets.QAction(PloverCAT)
        icon39 = QtGui.QIcon()
        icon39.addFile(":/information.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon39)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAutocompletion = QtWidgets.QAction(PloverCAT)
        self.actionAutocompletion.setCheckable(True)
        icon40 = QtGui.QIcon()
        icon40.addFile(":/wand.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutocompletion.setIcon(icon40)
        self.actionAutocompletion.setObjectName("actionAutocompletion")
        self.actionPaper_Tape_Font = QtWidgets.QAction(PloverCAT)
        self.actionPaper_Tape_Font.setObjectName("actionPaper_Tape_Font")
        self.actionEditor_Font = QtWidgets.QAction(PloverCAT)
        self.actionEditor_Font.setObjectName("actionEditor_Font")
        self.actionStyleFileSelect = QtWidgets.QAction(PloverCAT)
        self.actionStyleFileSelect.setObjectName("actionStyleFileSelect")
        self.actionGenerateStyleFromTemplate = QtWidgets.QAction(PloverCAT)
        self.actionGenerateStyleFromTemplate.setEnabled(True)
        self.actionGenerateStyleFromTemplate.setObjectName("actionGenerateStyleFromTemplate")
        self.actionCreateNewStyle = QtWidgets.QAction(PloverCAT)
        self.actionCreateNewStyle.setObjectName("actionCreateNewStyle")
        self.actionRefreshEditor = QtWidgets.QAction(PloverCAT)
        self.actionRefreshEditor.setObjectName("actionRefreshEditor")
        self.actionDeleteStyle = QtWidgets.QAction(PloverCAT)
        self.actionDeleteStyle.setObjectName("actionDeleteStyle")
        self.actionInsertNormalText = QtWidgets.QAction(PloverCAT)
        icon41 = QtGui.QIcon()
        icon41.addFile(":/control-cursor.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsertNormalText.setIcon(icon41)
        self.actionInsertNormalText.setObjectName("actionInsertNormalText")
        self.actionShowAllCharacters = QtWidgets.QAction(PloverCAT)
        self.actionShowAllCharacters.setCheckable(True)
        self.actionShowAllCharacters.setIcon(icon10)
        self.actionShowAllCharacters.setObjectName("actionShowAllCharacters")
        self.actionPlainASCII = QtWidgets.QAction(PloverCAT)
        self.actionPlainASCII.setObjectName("actionPlainASCII")
        self.actionHTML = QtWidgets.QAction(PloverCAT)
        self.actionHTML.setObjectName("actionHTML")
        self.actionAddAutocompletionTerm = QtWidgets.QAction(PloverCAT)
        icon42 = QtGui.QIcon()
        icon42.addFile(":/lightning.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddAutocompletionTerm.setIcon(icon42)
        self.actionAddAutocompletionTerm.setObjectName("actionAddAutocompletionTerm")
        self.actionJumpToParagraph = QtWidgets.QAction(PloverCAT)
        self.actionJumpToParagraph.setObjectName("actionJumpToParagraph")
        self.menuExport_as.addAction(self.actionPlainText)
        self.menuExport_as.addAction(self.actionPlainASCII)
        self.menuExport_as.addAction(self.actionASCII)
        self.menuExport_as.addAction(self.actionHTML)
        self.menuExport_as.addAction(self.actionSubRip)
        self.menuExport_as.addAction(self.actionODT)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionImport_RTF)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.menuExport_as.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen_Transcript_Folder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionFind_Replace_Pane)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionNormal_Copy)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionJumpToParagraph)
        self.menuEdit.addAction(self.actionInsertNormalText)
        self.menuEdit.addAction(self.actionClear_Paragraph)
        self.menuAudio.addAction(self.actionOpen_Audio)
        self.menuAudio.addAction(self.actionPlay_Pause)
        self.menuAudio.addAction(self.actionStop_Audio)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionSkip_Forward)
        self.menuAudio.addAction(self.actionSkip_Back)
        self.menuAudio.addAction(self.actionSpeed_Up)
        self.menuAudio.addAction(self.actionSlow_Down)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionShow_Video)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionRecord_Pause)
        self.menuAudio.addAction(self.actionStop_Recording)
        self.menuDocks.addAction(self.actionPaper_Tape)
        self.menuDocks.addAction(self.actionSuggestions)
        self.menuDocks.addAction(self.actionHistory)
        self.menuDocks.addAction(self.actionReveal_Steno)
        self.menuDocks.addAction(self.actionAudio_Controls)
        self.menuDocks.addAction(self.actionToolbox)
        self.menuView.addAction(self.actionZoom_In)
        self.menuView.addAction(self.actionZoom_Out)
        self.menuView.addAction(self.actionShowAllCharacters)
        self.menuView.addAction(self.actionWindowFont)
        self.menuView.addAction(self.actionPaper_Tape_Font)
        self.menuView.addAction(self.menuDocks.menuAction())
        self.menuDictionary.addAction(self.actionAdd_Custom_Dict)
        self.menuDictionary.addAction(self.actionRemove_Transcript_Dict)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionUser_Manual)
        self.menuHelp.addAction(self.actionAcknowledgements)
        self.menuSteno_Actions.addAction(self.actionMerge_Paragraphs)
        self.menuSteno_Actions.addAction(self.actionSplit_Paragraph)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionAutocompletion)
        self.menuSteno_Actions.addAction(self.actionAddAutocompletionTerm)
        self.menuSteno_Actions.addAction(self.actionRetroactive_Define)
        self.menuSteno_Actions.addAction(self.actionDefine_Last)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionCursor_At_End)
        self.menuSteno_Actions.addAction(self.actionCapture_All_Output)
        self.menuStyling.addAction(self.actionStyleFileSelect)
        self.menuStyling.addAction(self.actionCreateNewStyle)
        self.menuStyling.addAction(self.actionGenerateStyleFromTemplate)
        self.menuStyling.addAction(self.actionRefreshEditor)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuSteno_Actions.menuAction())
        self.menubar.addAction(self.menuAudio.menuAction())
        self.menubar.addAction(self.menuStyling.menuAction())
        self.menubar.addAction(self.menuDictionary.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolbar_file.addAction(self.actionNew)
        self.toolbar_file.addAction(self.actionOpen)
        self.toolbar_file.addAction(self.actionSave)
        self.toolbar_steno.addAction(self.actionAdd_Custom_Dict)
        self.toolbar_steno.addAction(self.actionMerge_Paragraphs)
        self.toolbar_steno.addAction(self.actionSplit_Paragraph)
        self.toolbar_steno.addAction(self.actionAddAutocompletionTerm)
        self.toolbar_steno.addAction(self.actionRetroactive_Define)
        self.toolbar_steno.addAction(self.actionDefine_Last)
        self.toolbar_audio.addAction(self.actionPlay_Pause)
        self.toolbar_audio.addAction(self.actionStop_Audio)
        self.toolbar_audio.addAction(self.actionRecord_Pause)
        self.toolbar_edit.addAction(self.actionCut)
        self.toolbar_edit.addAction(self.actionCopy)
        self.toolbar_edit.addAction(self.actionPaste)
        self.toolbar_edit.addAction(self.actionInsertNormalText)

        self.retranslateUi(PloverCAT)
        self.toolBox.setCurrentIndex(1)
        self.actionZoom_In.triggered.connect(self.textEdit.zoomIn) # type: ignore
        self.actionZoom_Out.triggered.connect(self.textEdit.zoomOut) # type: ignore
        self.actionSpeed_Up.triggered.connect(self.playRate.stepUp) # type: ignore
        self.actionSlow_Down.triggered.connect(self.playRate.stepDown) # type: ignore
        self.actionNormal_Copy.triggered.connect(self.textEdit.copy) # type: ignore
        self.actionPaper_Tape.triggered['bool'].connect(self.dockPaper.setVisible) # type: ignore
        self.actionSuggestions.triggered['bool'].connect(self.dockSuggest.setVisible) # type: ignore
        self.actionHistory.triggered['bool'].connect(self.dockHistoryStack.setVisible) # type: ignore
        self.actionReveal_Steno.triggered['bool'].connect(self.dockStenoData.setVisible) # type: ignore
        self.actionAudio_Controls.triggered['bool'].connect(self.dockAudio.setVisible) # type: ignore
        self.actionToolbox.triggered['bool'].connect(self.dockProp.setVisible) # type: ignore
        self.dockAudio.visibilityChanged['bool'].connect(self.actionAudio_Controls.setChecked) # type: ignore
        self.dockHistoryStack.visibilityChanged['bool'].connect(self.actionHistory.setChecked) # type: ignore
        self.dockPaper.visibilityChanged['bool'].connect(self.actionPaper_Tape.setChecked) # type: ignore
        self.dockProp.visibilityChanged['bool'].connect(self.actionToolbox.setChecked) # type: ignore
        self.dockStenoData.visibilityChanged['bool'].connect(self.actionReveal_Steno.setChecked) # type: ignore
        self.dockSuggest.visibilityChanged['bool'].connect(self.actionSuggestions.setChecked) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(PloverCAT)

    def retranslateUi(self, PloverCAT):
        _translate = QtCore.QCoreApplication.translate
        PloverCAT.setWindowTitle(_translate("PloverCAT", "MainWindow"))
        self.textEdit.setToolTip(_translate("PloverCAT", "Richtext editor."))
        self.menuFile.setTitle(_translate("PloverCAT", "File"))
        self.menuExport_as.setTitle(_translate("PloverCAT", "Export as..."))
        self.menuEdit.setTitle(_translate("PloverCAT", "Edit"))
        self.menuAudio.setTitle(_translate("PloverCAT", "Audiovisual"))
        self.menuView.setTitle(_translate("PloverCAT", "View"))
        self.menuDocks.setTitle(_translate("PloverCAT", "Docks"))
        self.menuDictionary.setTitle(_translate("PloverCAT", "Dictionary"))
        self.menuHelp.setTitle(_translate("PloverCAT", "Help"))
        self.menuSteno_Actions.setTitle(_translate("PloverCAT", "Steno Actions"))
        self.menuStyling.setTitle(_translate("PloverCAT", "Styling"))
        self.toolbar_file.setWindowTitle(_translate("PloverCAT", "File Toolbar"))
        self.toolbar_file.setAccessibleName(_translate("PloverCAT", "File Toolbar"))
        self.dockPaper.setToolTip(_translate("PloverCAT", "Displays steno notes, time of\n"
"stroke, audio time, and cursor\n"
"position."))
        self.dockPaper.setAccessibleName(_translate("PloverCAT", "Paper Tape"))
        self.dockPaper.setWindowTitle(_translate("PloverCAT", "Paper Tape"))
        self.strokeLocate.setToolTip(_translate("PloverCAT", "Select stroke and locate in editor text"))
        self.strokeLocate.setText(_translate("PloverCAT", "Locate"))
        self.dockSuggest.setToolTip(_translate("PloverCAT", "Displays suggestions from Tapey Tape"))
        self.dockSuggest.setWindowTitle(_translate("PloverCAT", "Suggestions"))
        self.suggest_sort.setToolTip(_translate("PloverCAT", "Enable to sort by most recent"))
        self.suggest_sort.setText(_translate("PloverCAT", "By Recency"))
        self.dockAudio.setToolTip(_translate("PloverCAT", "Audio seeker and other controls"))
        self.dockAudio.setWindowTitle(_translate("PloverCAT", "Audio Controls"))
        self.audio_label.setText(_translate("PloverCAT", "Select file to play audio"))
        self.playRate.setToolTip(_translate("PloverCAT", "Playback rate"))
        self.playRate.setSuffix(_translate("PloverCAT", "x"))
        self.audioDelay.setToolTip(_translate("PloverCAT", "Millisecond adjustment between actual timestamp and audio and steno timestamps."))
        self.audioDelay.setSuffix(_translate("PloverCAT", "ms"))
        self.audio_curr_pos.setToolTip(_translate("PloverCAT", "Current time"))
        self.audio_curr_pos.setText(_translate("PloverCAT", "00:00:00"))
        self.audio_seeker.setToolTip(_translate("PloverCAT", "Track for media presently playing"))
        self.audio_duration.setToolTip(_translate("PloverCAT", "Duration of track"))
        self.audio_duration.setText(_translate("PloverCAT", "00:00:00"))
        self.dockProp.setToolTip(_translate("PloverCAT", "Contains various controls"))
        self.dockProp.setWindowTitle(_translate("PloverCAT", "Toolbox"))
        self.styling_pane.setToolTip(_translate("PloverCAT", "Set style for current paragraph or load styles for export"))
        self.style_file_path.setToolTip(_translate("PloverCAT", "Name of current style file"))
        self.style_file_path.setText(_translate("PloverCAT", "Style file location"))
        self.label_3.setText(_translate("PloverCAT", "Current Paragraph Style:"))
        self.groupBox_4.setTitle(_translate("PloverCAT", "Style Settings"))
        self.blockFontSize.setSuffix(_translate("PloverCAT", "pt"))
        self.blockFontBold.setToolTip(_translate("PloverCAT", "Set text italic for style"))
        self.blockFontItalic.setToolTip(_translate("PloverCAT", "Set text italicized for style"))
        self.blockFontUnderline.setToolTip(_translate("PloverCAT", "Set text underlined for style"))
        self.blockLeftAlign.setToolTip(_translate("PloverCAT", "Set alignment left for style"))
        self.blockCenterAlign.setToolTip(_translate("PloverCAT", "Set alignment center for style"))
        self.blockRightAlign.setToolTip(_translate("PloverCAT", "Set alignment right for style"))
        self.blockJustify.setToolTip(_translate("PloverCAT", "Set alignment justified for style"))
        self.blockLineSpace.setToolTip(_translate("PloverCAT", "Set line spacing as proportion of font height \n"
"(ie 200% for double space)"))
        self.blockLineSpace.setSuffix(_translate("PloverCAT", "%"))
        self.label_30.setText(_translate("PloverCAT", "Average Char Width "))
        self.fontspaceInInch.setToolTip(_translate("PloverCAT", "Average character width of font, use this to estimate indent \n"
"and margin positions. Less accurate with proportional fonts."))
        self.fontspaceInInch.setSuffix(_translate("PloverCAT", "in"))
        self.label_28.setText(_translate("PloverCAT", "First Line Indent"))
        self.blockTextIndent.setToolTip(_translate("PloverCAT", "Specify text indent in inches relative to page margin"))
        self.blockTextIndent.setSuffix(_translate("PloverCAT", "in"))
        self.label_29.setText(_translate("PloverCAT", "Tab Stop Distance"))
        self.blockTabStop.setToolTip(_translate("PloverCAT", "Specify position of tab stop"))
        self.blockTabStop.setSuffix(_translate("PloverCAT", "in"))
        self.label_24.setText(_translate("PloverCAT", "Left Margin (Indent)"))
        self.blockLeftMargin.setToolTip(_translate("PloverCAT", "Specify paragraph margin relative to left page margin"))
        self.blockLeftMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_25.setText(_translate("PloverCAT", "Right Margin (Indent)"))
        self.blockRightMargin.setToolTip(_translate("PloverCAT", "Specify right margin relative to right page margin"))
        self.blockRightMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_26.setText(_translate("PloverCAT", "Top Margin (Padding)"))
        self.blockTopMargin.setToolTip(_translate("PloverCAT", "Specify padding for top of paragraph"))
        self.blockTopMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_27.setText(_translate("PloverCAT", "Bottom Margin (Padding)"))
        self.blockBottomMargin.setToolTip(_translate("PloverCAT", "Specify padding for bottom of paragraph"))
        self.blockBottomMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_31.setText(_translate("PloverCAT", "Parent Style"))
        self.blockParentStyle.setToolTip(_translate("PloverCAT", "Select parent style for style"))
        self.label_32.setText(_translate("PloverCAT", "Next Style"))
        self.blockNextStyle.setToolTip(_translate("PloverCAT", "Select style of next paragraph"))
        self.label_33.setText(_translate("PloverCAT", "Heading Level"))
        self.blockHeadingLevel.setToolTip(_translate("PloverCAT", "Specify heading level of style"))
        self.editCurrentStyle.setText(_translate("PloverCAT", "Modify Current Style"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.styling_pane), _translate("PloverCAT", "Styling"))
        self.page_format_pane.setToolTip(_translate("PloverCAT", "Set page format for ODF export"))
        self.label_8.setText(_translate("PloverCAT", "Page Width"))
        self.page_width.setToolTip(_translate("PloverCAT", "Paper width"))
        self.page_width.setSuffix(_translate("PloverCAT", "in."))
        self.label_9.setText(_translate("PloverCAT", "Page Height"))
        self.page_height.setToolTip(_translate("PloverCAT", "Page height"))
        self.page_height.setSuffix(_translate("PloverCAT", "in."))
        self.label_10.setText(_translate("PloverCAT", "Left Margin"))
        self.page_left_margin.setToolTip(_translate("PloverCAT", "Page left margin"))
        self.page_left_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_11.setText(_translate("PloverCAT", "Top Margin"))
        self.page_top_margin.setToolTip(_translate("PloverCAT", "Page top margin"))
        self.page_top_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_12.setText(_translate("PloverCAT", "Right Margin"))
        self.page_right_margin.setToolTip(_translate("PloverCAT", "Page right margin"))
        self.page_right_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_13.setText(_translate("PloverCAT", "Bottom Margin"))
        self.page_bottom_margin.setToolTip(_translate("PloverCAT", "Page bottom margin"))
        self.page_bottom_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_15.setText(_translate("PloverCAT", "Max Char per Line"))
        self.page_max_char.setToolTip(_translate("PloverCAT", "Each line can contain at most n char,\n"
"excluding line number and timestamps"))
        self.page_max_char.setSpecialValueText(_translate("PloverCAT", "Automatic"))
        self.label_14.setText(_translate("PloverCAT", "Max Lines per Page"))
        self.page_max_lines.setSpecialValueText(_translate("PloverCAT", "Automatic"))
        self.label_35.setText(_translate("PloverCAT", "Line Numbering"))
        self.enable_line_num.setToolTip(_translate("PloverCAT", "Enable line number in applicable formats"))
        self.label_34.setText(_translate("PloverCAT", "Frequency"))
        self.line_num_freq.setToolTip(_translate("PloverCAT", "Show line number every nth line for ODF"))
        self.label_36.setText(_translate("PloverCAT", "Line Timestamp"))
        self.label_37.setText(_translate("PloverCAT", "Header:"))
        self.header_left.setToolTip(_translate("PloverCAT", "Header text to be aligned left. \n"
"Use %p for page number."))
        self.header_left.setPlaceholderText(_translate("PloverCAT", "Left"))
        self.header_center.setToolTip(_translate("PloverCAT", "Header text to be centered. \n"
"Use %p for page number."))
        self.header_center.setPlaceholderText(_translate("PloverCAT", "Center"))
        self.header_right.setToolTip(_translate("PloverCAT", "Header text to be aligned right. \n"
"Use %p for page number."))
        self.header_right.setPlaceholderText(_translate("PloverCAT", "Right"))
        self.label_38.setText(_translate("PloverCAT", "Footer:"))
        self.footer_left.setToolTip(_translate("PloverCAT", "Footer text to be aligned left. \n"
"Use %p for page number."))
        self.footer_left.setPlaceholderText(_translate("PloverCAT", "Left"))
        self.footer_center.setToolTip(_translate("PloverCAT", "Footer text to be aligned center. \n"
"Use %p for page number."))
        self.footer_center.setPlaceholderText(_translate("PloverCAT", "Center"))
        self.footer_right.setToolTip(_translate("PloverCAT", "Footer text to be aligned right. \n"
"Use %p for page number."))
        self.footer_right.setPlaceholderText(_translate("PloverCAT", "Right"))
        self.edit_page_layout.setToolTip(_translate("PloverCAT", "Confirm and save changes to page and margin parameters"))
        self.edit_page_layout.setText(_translate("PloverCAT", "Change Page Layout"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_format_pane), _translate("PloverCAT", "Page Format"))
        self.find_replace_pane.setToolTip(_translate("PloverCAT", "Find and replace"))
        self.groupBox_2.setTitle(_translate("PloverCAT", "Search Types"))
        self.search_text.setToolTip(_translate("PloverCAT", "Search visible text for match"))
        self.search_text.setText(_translate("PloverCAT", "Text"))
        self.search_steno.setToolTip(_translate("PloverCAT", "Search strokes, find text has to match stroke completely"))
        self.search_steno.setText(_translate("PloverCAT", "Underlying Steno"))
        self.search_untrans.setToolTip(_translate("PloverCAT", "Search what appears to be untranslated chords in visible text"))
        self.search_untrans.setText(_translate("PloverCAT", "Untrans"))
        self.search_term.setToolTip(_translate("PloverCAT", "Text to search for"))
        self.search_term.setPlaceholderText(_translate("PloverCAT", "Find"))
        self.search_forward.setToolTip(_translate("PloverCAT", "Perform selected search forwards"))
        self.search_forward.setText(_translate("PloverCAT", "Next"))
        self.search_backward.setToolTip(_translate("PloverCAT", "Perform selected search backwards"))
        self.search_backward.setText(_translate("PloverCAT", "Previous"))
        self.replace_term.setToolTip(_translate("PloverCAT", "The text to replace the match found in search"))
        self.replace_term.setPlaceholderText(_translate("PloverCAT", "Replace"))
        self.replace_selected.setToolTip(_translate("PloverCAT", "Replace the found match with the text in the replace textbox"))
        self.replace_selected.setText(_translate("PloverCAT", "Once"))
        self.replace_all.setToolTip(_translate("PloverCAT", "Replace all matches with text in replace textbox"))
        self.replace_all.setText(_translate("PloverCAT", "All"))
        self.search_case.setToolTip(_translate("PloverCAT", "Case sensitive search"))
        self.search_case.setText(_translate("PloverCAT", "Match Case"))
        self.search_whole.setToolTip(_translate("PloverCAT", "Text in find has to match text as a whole word/stroke"))
        self.search_whole.setText(_translate("PloverCAT", "Whole Word/Stroke"))
        self.search_wrap.setToolTip(_translate("PloverCAT", "Search will continue from top/bottom if a match is not found in forward/back search"))
        self.search_wrap.setText(_translate("PloverCAT", "Wrap"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.find_replace_pane), _translate("PloverCAT", "Find and Replace"))
        self.paragraph_pane.setToolTip(_translate("PloverCAT", "Edit paragraph properties"))
        self.editorCheck.setToolTip(_translate("PloverCAT", "Unlock to edit paragraph properties"))
        self.editorCheck.setText(_translate("PloverCAT", "Lock"))
        self.label_2.setText(_translate("PloverCAT", "Paragraph"))
        self.editorParagraphLabel.setToolTip(_translate("PloverCAT", "Paragraph number"))
        self.editorParagraphLabel.setText(_translate("PloverCAT", "0"))
        self.label.setText(_translate("PloverCAT", "Creation Time"))
        self.editorCreationTime.setToolTip(_translate("PloverCAT", "Modifies creation time of paragraph"))
        self.editorCreationTime.setDisplayFormat(_translate("PloverCAT", "yyyy-MM-dd hh:mm:ss.zzz"))
        self.label_6.setText(_translate("PloverCAT", "Edit Time"))
        self.editorEditTime.setToolTip(_translate("PloverCAT", "Read only. Displays edit time\n"
"of paragraph. Will change upon\n"
"any cursor movement."))
        self.editorEditTime.setDisplayFormat(_translate("PloverCAT", "yyyy-MM-dd hh:mm:ss.zzz"))
        self.label_4.setText(_translate("PloverCAT", "Audio Start Time"))
        self.editorAudioStart.setToolTip(_translate("PloverCAT", "Modifies audio start time of\n"
"paragraph. By default, the\n"
"audio end time of the previous\n"
"paragraph is set by this\n"
"unless previous paragraph has\n"
"audio end time set."))
        self.editorAudioStart.setDisplayFormat(_translate("PloverCAT", "hh:mm:ss.zzz"))
        self.label_5.setText(_translate("PloverCAT", "Audio End Time"))
        self.editorAudioEnd.setToolTip(_translate("PloverCAT", "Sets audio end time for this\n"
"paragraph. If not set, audio\n"
"end time is the audio start\n"
"time from next paragraph."))
        self.editorAudioEnd.setDisplayFormat(_translate("PloverCAT", "hh:mm:ss.zzz"))
        self.label_7.setText(_translate("PloverCAT", "Notes"))
        self.editorNotes.setToolTip(_translate("PloverCAT", "Custom notes attached to paragraph"))
        self.submitEdited.setToolTip(_translate("PloverCAT", "Enable with checkbox in order to submit edits"))
        self.submitEdited.setText(_translate("PloverCAT", "Edit Paragraph Properties"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.paragraph_pane), _translate("PloverCAT", "Paragraph Properties Editor"))
        self.label_16.setText(_translate("PloverCAT", "Input Device:"))
        self.label_17.setText(_translate("PloverCAT", "Audio Codec:"))
        self.label_18.setText(_translate("PloverCAT", "File Container:"))
        self.label_19.setText(_translate("PloverCAT", "Sample Rate"))
        self.audio_device.setToolTip(_translate("PloverCAT", "Select where to receive audio input"))
        self.audio_codec.setToolTip(_translate("PloverCAT", "Select the audio codec to record with, depends on system codecs"))
        self.audio_container.setToolTip(_translate("PloverCAT", "Select audio file type, depends on system"))
        self.audio_sample_rate.setToolTip(_translate("PloverCAT", "Select the sample rate for the recorded audio"))
        self.audio_channels.setToolTip(_translate("PloverCAT", "Select number of channels to record from"))
        self.label_20.setText(_translate("PloverCAT", "Channels"))
        self.groupBox_3.setTitle(_translate("PloverCAT", "Encoding Mode"))
        self.constant_quality.setToolTip(_translate("PloverCAT", "Constant quality means varying bitrate for audio file"))
        self.constant_quality.setText(_translate("PloverCAT", "Constant Quality"))
        self.quality_slider.setToolTip(_translate("PloverCAT", "Quality of audio recording, from very bad to very good"))
        self.constant_bitrate.setToolTip(_translate("PloverCAT", "Constant bitrate means quality will vary"))
        self.constant_bitrate.setText(_translate("PloverCAT", "Constant Bitrate"))
        self.audio_bitrate.setToolTip(_translate("PloverCAT", "Select bitrate for recording"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.audio_recording_pane), _translate("PloverCAT", "Audio Recording"))
        self.dict_selection.setItemText(0, _translate("PloverCAT", "en-US"))
        self.spell_search.setText(_translate("PloverCAT", "Search"))
        self.spell_skip.setText(_translate("PloverCAT", "Skip"))
        self.spell_ignore_all.setText(_translate("PloverCAT", "Ignore All"))
        self.spell_change.setText(_translate("PloverCAT", "Change"))
        self.label_21.setText(_translate("PloverCAT", "Detected:"))
        self.spellcheck_suggestions.setToolTip(_translate("PloverCAT", "Double click on choice to replace"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.spellcheck_pane), _translate("PloverCAT", "Spellcheck"))
        self.toolbar_steno.setWindowTitle(_translate("PloverCAT", "Steno Actions Toolbar"))
        self.toolbar_steno.setAccessibleName(_translate("PloverCAT", "Editing Toolbar"))
        self.toolbar_audio.setWindowTitle(_translate("PloverCAT", "Audio Toolbar"))
        self.toolbar_audio.setAccessibleName(_translate("PloverCAT", "Audiovisual Toolbar"))
        self.dockHistoryStack.setWindowTitle(_translate("PloverCAT", "History"))
        self.label_22.setText(_translate("PloverCAT", "Session History:"))
        self.undoView.setToolTip(_translate("PloverCAT", "Placeholder for new development"))
        self.label_23.setText(_translate("PloverCAT", "Version History:"))
        self.revert_version.setText(_translate("PloverCAT", "Revert"))
        self.dockStenoData.setWindowTitle(_translate("PloverCAT", "Reveal Steno"))
        self.toolbar_edit.setWindowTitle(_translate("PloverCAT", "Edit Toolbar"))
        self.actionOpen_Stroke_Log.setText(_translate("PloverCAT", "Open Stroke Log..."))
        self.actionOpen_Project.setText(_translate("PloverCAT", "Open Project..."))
        self.actionOpen.setText(_translate("PloverCAT", "Open..."))
        self.actionOpen.setToolTip(_translate("PloverCAT", "Open existing transcript folder"))
        self.actionOpen.setShortcut(_translate("PloverCAT", "Ctrl+O"))
        self.actionSave_As.setText(_translate("PloverCAT", "Save Transcript Data at..."))
        self.actionSave_As.setToolTip(_translate("PloverCAT", "Save transcript data to another location"))
        self.actionNew.setText(_translate("PloverCAT", "New"))
        self.actionNew.setToolTip(_translate("PloverCAT", "Create new transcript"))
        self.actionNew.setShortcut(_translate("PloverCAT", "Ctrl+N"))
        self.actionSave.setText(_translate("PloverCAT", "Save"))
        self.actionSave.setToolTip(_translate("PloverCAT", "Save transcript and paper tape contents"))
        self.actionSave.setShortcut(_translate("PloverCAT", "Ctrl+S"))
        self.actionQuit.setText(_translate("PloverCAT", "Quit"))
        self.actionQuit.setToolTip(_translate("PloverCAT", "Exit the editor"))
        self.actionQuit.setShortcut(_translate("PloverCAT", "Ctrl+Q"))
        self.actionClose.setText(_translate("PloverCAT", "Close"))
        self.actionClose.setToolTip(_translate("PloverCAT", "Close the transcript"))
        self.actionAdd_Custom_Dict.setText(_translate("PloverCAT", "Add Custom Dict"))
        self.actionAdd_Custom_Dict.setToolTip(_translate("PloverCAT", "Select a custom dictionary to use for the transcript"))
        self.actionOpen_Audio_File.setText(_translate("PloverCAT", "Open Audio File"))
        self.actionStop.setText(_translate("PloverCAT", "Stop"))
        self.actionPlainText.setText(_translate("PloverCAT", "Plain Text (.txt)"))
        self.actionPlainText.setToolTip(_translate("PloverCAT", "Export only the text from the transcript"))
        self.actionASCII.setText(_translate("PloverCAT", "ASCII (.txt)"))
        self.actionASCII.setToolTip(_translate("PloverCAT", "Export transcript in ASCII transcript format"))
        self.actionSubRip.setText(_translate("PloverCAT", "SubRip (.srt)"))
        self.actionSubRip.setToolTip(_translate("PloverCAT", "Export transcript as a SubRip caption file"))
        self.actionCut.setText(_translate("PloverCAT", "Cut"))
        self.actionCut.setToolTip(_translate("PloverCAT", "Cut text and associated steno data"))
        self.actionCut.setShortcut(_translate("PloverCAT", "Ctrl+X"))
        self.actionCopy.setText(_translate("PloverCAT", "Copy"))
        self.actionCopy.setToolTip(_translate("PloverCAT", "Copy text and associated steno data"))
        self.actionCopy.setShortcut(_translate("PloverCAT", "Ctrl+C"))
        self.actionPaste.setText(_translate("PloverCAT", "Paste"))
        self.actionPaste.setToolTip(_translate("PloverCAT", "Paste text and associated steno data"))
        self.actionPaste.setShortcut(_translate("PloverCAT", "Ctrl+V"))
        self.actionZoom_In.setText(_translate("PloverCAT", "Zoom In"))
        self.actionZoom_In.setShortcut(_translate("PloverCAT", "Ctrl+="))
        self.actionZoom_Out.setText(_translate("PloverCAT", "Zoom Out"))
        self.actionZoom_Out.setShortcut(_translate("PloverCAT", "Ctrl+-"))
        self.actionUndo.setText(_translate("PloverCAT", "Undo"))
        self.actionUndo.setToolTip(_translate("PloverCAT", "Undo writing or other action"))
        self.actionUndo.setShortcut(_translate("PloverCAT", "Ctrl+Z"))
        self.actionRedo.setText(_translate("PloverCAT", "Redo"))
        self.actionRedo.setToolTip(_translate("PloverCAT", "Redo writing or other action"))
        self.actionRedo.setShortcut(_translate("PloverCAT", "Ctrl+Y"))
        self.actionSelect_All.setText(_translate("PloverCAT", "Select All"))
        self.actionSelect_All.setShortcut(_translate("PloverCAT", "Ctrl+A"))
        self.actionOpen_Audio.setText(_translate("PloverCAT", "Open Audiovisual"))
        self.actionOpen_Audio.setToolTip(_translate("PloverCAT", "Select an audiovisual file on computer to play"))
        self.actionOpen_Audio.setShortcut(_translate("PloverCAT", "Ctrl+Shift+O"))
        self.actionSkip_Back.setText(_translate("PloverCAT", "Skip Back"))
        self.actionSkip_Back.setToolTip(_translate("PloverCAT", "Skip back in audio/video"))
        self.actionSkip_Back.setShortcut(_translate("PloverCAT", "Ctrl+J"))
        self.actionSkip_Forward.setText(_translate("PloverCAT", "Skip Forward"))
        self.actionSkip_Forward.setToolTip(_translate("PloverCAT", "Skip forward in audio/video"))
        self.actionSkip_Forward.setShortcut(_translate("PloverCAT", "Ctrl+L"))
        self.actionStop_Audio.setText(_translate("PloverCAT", "Stop"))
        self.actionStop_Audio.setToolTip(_translate("PloverCAT", "Stop selected audio/video being played"))
        self.actionStop_Audio.setShortcut(_translate("PloverCAT", "Ctrl+W"))
        self.actionSlow_Down.setText(_translate("PloverCAT", "Slow Down"))
        self.actionSlow_Down.setToolTip(_translate("PloverCAT", "Slow down playback"))
        self.actionSlow_Down.setShortcut(_translate("PloverCAT", "Ctrl+Shift+S"))
        self.actionSpeed_Up.setText(_translate("PloverCAT", "Speed Up"))
        self.actionSpeed_Up.setToolTip(_translate("PloverCAT", "Speed up playback"))
        self.actionSpeed_Up.setShortcut(_translate("PloverCAT", "Ctrl+Shift+G"))
        self.actionPlay_Pause.setText(_translate("PloverCAT", "Play/Pause"))
        self.actionPlay_Pause.setToolTip(_translate("PloverCAT", "Play or pause selected audio/video"))
        self.actionPlay_Pause.setShortcut(_translate("PloverCAT", "Ctrl+P"))
        self.actionMerge_Paragraphs.setText(_translate("PloverCAT", "Merge Paragraphs"))
        self.actionMerge_Paragraphs.setToolTip(_translate("PloverCAT", "Merge two paragraphs by selecting across \n"
"two paragraphs, or place cursor in second of \n"
"paragraphs to merge"))
        self.actionSplit_Paragraph.setText(_translate("PloverCAT", "Split Paragraph"))
        self.actionSplit_Paragraph.setToolTip(_translate("PloverCAT", "Split paragraph by placing cursor at position to split"))
        self.actionWindowFont.setText(_translate("PloverCAT", "Window Font"))
        self.actionWindowFont.setToolTip(_translate("PloverCAT", "Set font and size"))
        self.actionODT.setText(_translate("PloverCAT", "OpenDocumentText(.odt)"))
        self.actionODT.setToolTip(_translate("PloverCAT", "Export transcript as OpenDocumentText"))
        self.actionNormal_Copy.setText(_translate("PloverCAT", "Normal Copy"))
        self.actionNormal_Copy.setToolTip(_translate("PloverCAT", "Copy the text, but not steno data, for use in other applications"))
        self.actionNormal_Copy.setShortcut(_translate("PloverCAT", "Ctrl+Shift+C"))
        self.actionFind_Replace_Pane.setText(_translate("PloverCAT", "Find/Replace Pane"))
        self.actionFind_Replace_Pane.setToolTip(_translate("PloverCAT", "Open Find/Replace Pane if hidden"))
        self.actionFind_Replace_Pane.setShortcut(_translate("PloverCAT", "Ctrl+F"))
        self.actionOpen_Transcript_Folder.setText(_translate("PloverCAT", "Open Transcript Folder"))
        self.actionOpen_Transcript_Folder.setToolTip(_translate("PloverCAT", "Open the transcript folder in the system file explorer"))
        self.actionRecord_Pause.setText(_translate("PloverCAT", "Record/Pause"))
        self.actionRecord_Pause.setToolTip(_translate("PloverCAT", "Start or pause the recording of audio"))
        self.actionRecord_Pause.setShortcut(_translate("PloverCAT", "Ctrl+Shift+P"))
        self.actionPause_Recording.setText(_translate("PloverCAT", "Pause Recording"))
        self.actionStop_Recording.setText(_translate("PloverCAT", "Stop Recording"))
        self.actionStop_Recording.setToolTip(_translate("PloverCAT", "Stop recording audio"))
        self.actionShow_Video.setText(_translate("PloverCAT", "Show/Hide Video"))
        self.actionShow_Video.setToolTip(_translate("PloverCAT", "Display or hide video window"))
        self.actionRemove_Transcript_Dict.setText(_translate("PloverCAT", "Remove Transcript Dict"))
        self.actionRemove_Transcript_Dict.setToolTip(_translate("PloverCAT", "Remove a transcript dictionary"))
        self.actionImport_RTF.setText(_translate("PloverCAT", "Import RTF/CRE"))
        self.actionImport_RTF.setToolTip(_translate("PloverCAT", "Import RTF file as a transcript"))
        self.actionCursor_At_End.setText(_translate("PloverCAT", "Lock Cursor At End"))
        self.actionCursor_At_End.setToolTip(_translate("PloverCAT", "All writing will be appended to end of document"))
        self.actionCapture_All_Output.setText(_translate("PloverCAT", "Capture All Steno Output"))
        self.actionCapture_All_Output.setToolTip(_translate("PloverCAT", "Steno output will be recorded even if window is not in focus"))
        self.actionUser_Manual.setText(_translate("PloverCAT", "Online User Manual"))
        self.actionUser_Manual.setToolTip(_translate("PloverCAT", "Open online user manual on GitHub"))
        self.actionAcknowledgements.setText(_translate("PloverCAT", "Acknowledgements"))
        self.actionPaper_Tape.setText(_translate("PloverCAT", "Paper Tape"))
        self.actionSuggestions.setText(_translate("PloverCAT", "Suggestions"))
        self.actionHistory.setText(_translate("PloverCAT", "History"))
        self.actionReveal_Steno.setText(_translate("PloverCAT", "Reveal Steno"))
        self.actionAudio_Controls.setText(_translate("PloverCAT", "Audio Controls"))
        self.actionToolbox.setText(_translate("PloverCAT", "Toolbox"))
        self.actionClear_Paragraph.setText(_translate("PloverCAT", "Reset Paragraph"))
        self.actionRetroactive_Define.setText(_translate("PloverCAT", "Retroactive Define"))
        self.actionRetroactive_Define.setToolTip(_translate("PloverCAT", "Set new translation for strokes under selected text, replaces all occurrences of text"))
        self.actionRetroactive_Define.setShortcut(_translate("PloverCAT", "Ctrl+R"))
        self.actionChanglog.setText(_translate("PloverCAT", "Changlog"))
        self.actionDefine_Last.setText(_translate("PloverCAT", "Define Last"))
        self.actionDefine_Last.setToolTip(_translate("PloverCAT", "Scan to find last untranslate, and define it for past and future occurrences"))
        self.actionDefine_Last.setShortcut(_translate("PloverCAT", "Ctrl+Shift+R"))
        self.actionAbout.setText(_translate("PloverCAT", "About"))
        self.actionAutocompletion.setText(_translate("PloverCAT", "Autocompletion"))
        self.actionAutocompletion.setToolTip(_translate("PloverCAT", "Toggle to enable autocomplete"))
        self.actionPaper_Tape_Font.setText(_translate("PloverCAT", "Paper Tape Font"))
        self.actionEditor_Font.setText(_translate("PloverCAT", "Editor Font"))
        self.actionStyleFileSelect.setText(_translate("PloverCAT", "Select Style File..."))
        self.actionStyleFileSelect.setToolTip(_translate("PloverCAT", "Select style file (JSON or ODF)"))
        self.actionGenerateStyleFromTemplate.setText(_translate("PloverCAT", "Generate Style File From Template"))
        self.actionGenerateStyleFromTemplate.setToolTip(_translate("PloverCAT", "Select template file (ODT) and generate style json\n"
"with supported formatting only."))
        self.actionCreateNewStyle.setText(_translate("PloverCAT", "Create New Style"))
        self.actionRefreshEditor.setText(_translate("PloverCAT", "Refresh Editor"))
        self.actionRefreshEditor.setShortcut(_translate("PloverCAT", "F5"))
        self.actionDeleteStyle.setText(_translate("PloverCAT", "Delete Style"))
        self.actionInsertNormalText.setText(_translate("PloverCAT", "Insert Normal Text"))
        self.actionInsertNormalText.setToolTip(_translate("PloverCAT", "Insert normal text through popup \n"
"dialog box at cursor location"))
        self.actionInsertNormalText.setShortcut(_translate("PloverCAT", "Ins"))
        self.actionShowAllCharacters.setText(_translate("PloverCAT", "Show All Characters"))
        self.actionPlainASCII.setText(_translate("PloverCAT", "Plain ASCII (.txt)"))
        self.actionPlainASCII.setToolTip(_translate("PloverCAT", "Export transcript in simple ASCII transcript format with line numbers and page number, but no other formatting"))
        self.actionHTML.setText(_translate("PloverCAT", "HTML (.html)"))
        self.actionHTML.setToolTip(_translate("PloverCAT", "Export transcript as HTML"))
        self.actionAddAutocompletionTerm.setText(_translate("PloverCAT", "Add Autocompletion Term"))
        self.actionAddAutocompletionTerm.setToolTip(_translate("PloverCAT", "Store text to use in autocompletion"))
        self.actionJumpToParagraph.setText(_translate("PloverCAT", "Jump to Paragraph ..."))
from plover_cat.TextEditor import PloverCATEditor
from . import resources_rc
